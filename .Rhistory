mg <- present($girls == 2082052)
mg <- present[$girls == 2082025]
present[present$girls = 2082052}]
present[present$girls == 2082052]
present[present$gorls == 2082052, ]
present[present$girls == 2082052,]
boyz <- present[present$boys / (present$boys + present$girls)]
boyz
boyz <- present[present$boys / (present$boys + present$girls),]
boyz
boyz <- present[, present$boys / (present$boys + present$girls)]
boyz
str(present)
boyz <- c(present$boys, present$girls)
head(boyz)
str(boyz)
rm(boyz)
boyz < c(present$boys / (present$boys + present $girls))
boyz <- c(present$boys / (present$boys + present $girls))
head boyz
head(boyz)
head(present)
attach(boyz)
dim(boyz)
boyz
plot(boyz)
lines(boyz)
mg <- present[,present$girls > present$boys]
mg
mb <- present[,present$girls < present$boys]
mg
mb
present
mb <- present[, present$boys > present$girls]
names(present)
min(boyz)
max(boyz)
presenta <- present
presenta
presenta["boystogirls"] <- NA
presenta["difference"] <- NA
presenta$boystogirls <- presenta$boys / (presenta$boys + presenta$girls)
presenta$difference <- presenta$boys - presenta$girls
presenta
dim(presenta)
summary(presenta)
presenta[, $difference == 105244]
presenta[, presenta$difference -- 105244]
presenta[presenta$difference == 105244, ]
source("http://www.openintro.org/stat/data/cdc.R")
names(cdc)
head(cdc)
dim(cdc)
summary(cdc)
sapply(cdc, class)
?table()
myt <- table(cdc$genhlth)
head(myt)
myf <- myt / nrow(cdc)
myf
smoke = table(cdc$smoke100)
barplot(smoke)
gender_smokers = table(cdc$gender, cdc$smoke100)
head(gender_smokers)
gender_smokers
mosaicplot(gender_smokers)
names(cdc)
under23.and.smoke <- subset(cdc, cdc$smoke100 == 1 & cdc$age < 23)
head(under23.and.smoke)
dim(under23.and.smoke)
nrow(under23.and.smoke)
boxplot(cdc$height)
summary(cdc$height)
boxplot(cdc$height ~ cdc$gender)
bmi = (cdc$weight/cdc$height^2) * 703
boxplot(bmi ~ cdc$genhlth)
head(bmi)
names(bmi)
hist(cdc$age)
hist(bmi)
hist(bmi, breaks=50)
hist(bmi)
hist(bmi, breaks=50)
plot(cdc$weight, cdc$wtdesire)
plot(head(cdc$weight), head(cdc$wtdesire))
plot(cdc$weight, cdc$wtdesire)
plot(x = cdc$weight, y= cdc$wtdesire, type = "l")
?plot()
plot(cdc$weight, cdc$wtdesire, asp == "1")
plot(cdc$weight, cdc$wtdesire, asp)
?plot()
plot(cdc$weight, cdc$wtdesire, 1)
plot(cdc$weight, cdc$wtdesire)
plot(cdc$wtdesire, cdc$weight)
plot(cdc$weight, cdc$wtdesire, asp = 1)
plot(cdc$weight, cdc$wtdesire, asp = 100)
plot(cdc$weight, cdc$wtdesire, asp = .5)
xy.coords(700, y = 700)
plot(cdc$weight, cdc$wtdesire)
abline(lm(cdc$weight, cdc$wtdesire))
abline(lm(cdc$weight ~ cdc$wtdesire))
abline(lm(head(cdc$weight) ~ head(cdc$wtdesire)))
abline(lm(head(cdc$weight) ~ head(cdc$wtdesire)))
plot(head(cdc$weight), head(cdc$wtdesire))
abline(lm(head(cdc$weight) ~ head(cdc$wtdesire)))
plot(cdc$weight, cdc$weight - cdc$wtdesire)
abline(lm(cdc$weight ~ cdc$weight - cdc$wtdesire))
abline(lm(cdc$weight ~ (cdc$weight - cdc$wtdesire)))
plot(cdc$weight, cdc$wtdesire, xlim=500, ylim=500)
plot(cdc$weight, cdc$wtdesire, xlim=c(500), ylim=c(500))
plot(cdc$weight, cdc$wtdesire, xlim=c(0,500), ylim=c(0,500))
clear
clear()
library(datasets)
data(iris)
?iris
head(iris)
summary(iris)
dim(iris)
split(iris)
iris
s <- split(iris, iris$Species)
s
sapply(s, function(x) colMeans(x[, c("Sepal.Length")]))
sapply(s, function(x) colMeans(x[, c("Sepal.Length", "Sepal.Width")]))
rowMeans(iris[, 1:4])
rowMeans(iris, 1:4)
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
apply(iris, 1, mean)
data(mtcars)
dim(mtcars)
summary(mtcars)
mtcars
?mtcars
sapply(mtcars, cyl, mean)
split(mtcars, mtcars$cyl)
lapply(mtcars, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
209.21429 - 82.63636
pwd
dir
env
ls
source('~/.active-rstudio-document')
data$Time <- strftime(data$Time, '%H:%M:%S')
head(data)
tail(data)
head(data, n=200)
?subset
x <- subset(data, Date > 2007-02-00 && Date < 2007-02-03)
head(x)
x <- subset(data, Date >= as.Date("2007-02-01") && Date <= as.Date("2007-02-02")
)
x <- subset(data, Date >= as.Date("2007-02-01") & Date <= as.Date("2007-02-02"))
head(data)
head(x)
data <- subset(data, Date >= as.Date("2007-02-01") & Date <= as.Date("2007-02-02"))
head(data)
tail(data)
data$Time <- strptime(data$Time, format="%H:%M:%S")
source('~/GitHub/datasciencecoursera/datasciencecoursera/ExData_Plotting1/plot1.R')
x <- ""
plot(data$Global_active_power, type="h", ylab="Frequency")
plot(data$Global_active_power)
plot(data$Global_active_power, type="h")
summary(data)
hist(data$Global_active_power), ylab = "Frequency", main = "Global Active Power", xlab="Global Active Power (kilowats)")
hist(data$Global_active_power, ylab = "Frequency", main = "Global Active Power", xlab="Global Active Power (kilowats)")
?host
?hist
hist(data$Global_active_power, ylab = "Frequency", main = "Global Active Power", xlab="Global Active Power (kilowats)", col="red")
hist(data$Global_active_power, ylab = "Frequency",
main = "Global Active Power", xlab="Global Active Power (kilowats)",
col="red")
hist(data$Global_active_power, ylab = "Frequency",
main = "Global Active Power", xlab="Global Active Power (kilowats)",
col="red")
?hist
hist(data$Global_active_power, ylab = "Frequency",
main = "Global Active Power", xlab="Global Active Power (kilowats)",
col="red")
dev.copy(png, file = "plot1.png") ## copy my plot to a PNG file
dev.off()                         ## close the PNG device!
?dev.copy
dev.copy(png, file = "plot1.png", width=480, height=480)
dev.off()
source('~/GitHub/datasciencecoursera/datasciencecoursera/ExData_Plotting1/plot1.R')
plot(data$Global_active_power, Date,
ylab="Global Active Power (kilowats)")
plot(data$Date, data$Global_active_power,
ylab="Global Active Power (kilowats)")
plot(data$Time, data$Global_active_power,
ylab="Global Active Power (kilowats)")
plot(data$Time, data$Global_active_power,
ylab="Global Active Power (kilowats)")
?plot
plot(data$Time, data$Global_active_power, type="l", na.rm="TRUE",
+      ylab="Global Active Power (kilowats)")
plot(data$Time, data$Global_active_power, type="l", na.rm=TRUE,
+      ylab="Global Active Power (kilowats)")
plot(data$Time, data$Global_active_power, type="l",
+      ylab="Global Active Power (kilowats)")
plot(data$Time, data$Global_active_power, type="l", na.rm=TRUE,
ylab="Global Active Power (kilowats)")
plot(data$Time, data$Global_active_power, type="l",
ylab="Global Active Power (kilowats)")
plot(data$Time, data$Global_active_power)
str(data$Time)
data$Time
data$Global_active_power
hist(data$Time, data$Global_active_power)
class(data)
class(data$Time)
?as.number
?as
setwd("~/GitHub/datasciencecoursera/datasciencecoursera/ExData_Plotting1")
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp)
data <- read.table(unz(temp, "household_power_consumption.txt"),sep=";", header=TRUE, na.strings="?")
unlink(temp)
?patch
?paste
x <- paste(data$Date, data$Time, sep=" ")
head(x)
ata$DateTime <- as.Date(data$DateTime, format="%d/%m/%Y %H:%M:%S")
data$DateTime <- as.Date(data$DateTime, format="%d/%m/%Y %h:%m:%s")
?as.Date
?strptime
data$DateTime <- strptime(data$DateTime, format="%d/%m/%Y %h:%m:%s")
head(data$DateTime)
ata$DateTime <- paste(data$Date, data$Time, sep=" ")
data$DateTime <- paste(data$Date, data$Time, sep=" ")
data$DateTime <- strptime(data$DateTime, format="%d/%m/%Y %h:%m:%s")
head data$DateTime
head(data$DateTime)
data$DateTime <- paste(data$Date, data$Time, sep=" ")
head(data$DateTime)
data$DateTime <- strptime(data$DateTime, format="%d/%m/%Y %H:%M:%S")
head(data$DateTime)
data <- subset(data, DateTime >= as.Date("2007-02-01") & DateTime <= as.Date("2007-02-02"))
data$DateTime <- paste(data$Date, data$Time, sep=" ")
data$DateTime <- strptime(data$DateTime, format="%d/%m/%Y %H:%M:%S", tz="GMT")
head(data$DateTime)
data <- subset(data, DateTime >= as.Date("2007-02-01 00:00:00 GMT") & DateTime < as.Date("2007-02-03 00:00:00 GMT"))
?Ops.Date
begDate <- strptime("2007-02-01 00:00:00 GMT", format="%d/%m/%Y %H:%M:%S", tz="GMT")
endDate <- strptime("2007-02-03 00:00:00 GMT", format="%d/%m/%Y %H:%M:%S", tz="GMT")
data <- subset(data, DateTime >= begDate & DateTime < endDate)
begdate
begDate
## set the working directory and read the household data
setwd("~/GitHub/datasciencecoursera/datasciencecoursera/ExData_Plotting1")
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp)
data <- read.table(unz(temp, "household_power_consumption.txt"),sep=";", header=TRUE, na.strings="?")
unlink(temp)
## convert the character date into a proper date class
data$DateTime <- paste(data$Date, data$Time, sep=" ")
data$DateTime <- strptime(data$DateTime, format="%d/%m/%Y %H:%M:%S", tz="GMT")
## now select only the 2 days in Feb. 2007 we're looking for
begDate <- strptime(c("2007-02-01 00:00:00 GMT"), format=c("%d/%m/%Y %H:%M:%S"), tz="GMT")
endDate <- strptime(c("2007-02-03 00:00:00 GMT"), format=c("%d/%m/%Y %H:%M:%S"), tz="GMT")
data <- subset(data, DateTime >= begDate & DateTime < endDate)
##
## create plot 2
##
head(data)
## set the working directory and read the household data
setwd("~/GitHub/datasciencecoursera/datasciencecoursera/ExData_Plotting1")
temp <- tempfile()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp)
data <- read.table(unz(temp, "household_power_consumption.txt"),sep=";", header=TRUE, na.strings="?")
unlink(temp)
## convert the character date into a proper date class
data$DateTime <- paste(data$Date, data$Time, sep=" ")
data$DateTime <- strptime(data$DateTime, format="%d/%m/%Y %H:%M:%S", tz="GMT")
## now select only the 2 days in Feb. 2007 we're looking for
begDate <- strptime(c("2007-02-01 00:00:00 GMT"), format=c("%d/%m/%Y %H:%M:%S"), tz="GMT")
endDate <- strptime(c("2007-02-03 00:00:00 GMT"), format=c("%d/%m/%Y %H:%M:%S"), tz="GMT")
head(data)
begDate
class(data$DateTime)
class(begDate)
begDate <- strptime(c("2007-02-01 00:00:00 GMT"), format=c("%Y/%m/%d %H:%M:%S"), tz="GMT")
endDate <- strptime(c("2007-02-03 00:00:00 GMT"), format=c("%Y/%m/%d %H:%M:%S"), tz="GMT")
begDate
endDate
begDate <- strptime(c("2007-02-01 00:00:00 GMT"), format=c("%Y-%m-%d %H:%M:%S"), tz="GMT")
endDate <- strptime(c("2007-02-03 00:00:00 GMT"), format=c("%Y-%m-%d %H:%M:%S"), tz="GMT")
begDate
endDate
data <- subset(data, DateTime >= begDate & DateTime < endDate)
head(data)
tail(data)
plot(data$DateTime, data$Global_active_power, type="l",
ylab="Global Active Power (kilowats)")
plot(data$DateTime, data$Global_active_power, type="l",
ylab="Global Active Power (kilowats)", xlab="")
dev.copy(png, file = "plot2.png", width=480, height=480)
dev.off()                         ## close the PNG device!
source('~/GitHub/datasciencecoursera/datasciencecoursera/ExData_Plotting1/plot1.R')
source('~/GitHub/datasciencecoursera/datasciencecoursera/ExData_Plotting1/plot2.R')
head(data)
plot(data$DateTime, data$Sub_metering_1, type="l",
ylab="Energy sub metering", xlab="")
line(data$DateTime, data$Sub_metering_2, type="l",
col='red')
?line
?points
plot(data$DateTime, data$Sub_metering_1, type="l",
ylab="Energy sub metering", xlab="")
points(data$DateTime, data$Sub_metering_2, type="l",
col='red')
points(data$DateTime, data$Sub_metering_3, type="l",
col='blue')
?legend
legend("topright", pch = 1,
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
?pch
examples()
example()
?legend
plot(data$DateTime, data$Sub_metering_1, type="l",
ylab="Energy sub metering", xlab="")
points(data$DateTime, data$Sub_metering_2, type="l",
col='red')
points(data$DateTime, data$Sub_metering_3, type="l",
col='blue')
legend("topright", pch = 32,
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
legend("topright", pch = 24,
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
examples(points)
example(points)
example(points)
legend("topright", pch = 25,
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
legend("topright", pch = 30,
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a
legend("topright", pch = "-",
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
legend("topright", pch = "---",
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
legend("topright", pch = "*",
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
legend("topright", pch = *, cex = 3,
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
legend("topright", pch = "*", cex = 3,
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG f
plot(data$DateTime, data$Sub_metering_1, type="l",
ylab="Energy sub metering", xlab="")
points(data$DateTime, data$Sub_metering_2, type="l",
col='red')
points(data$DateTime, data$Sub_metering_3, type="l",
col='blue')
legend("topright", pch = "---",
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
plot(data$DateTime, data$Sub_metering_1, type="l",
ylab="Energy sub metering", xlab="")
points(data$DateTime, data$Sub_metering_2, type="l",
col='red')
points(data$DateTime, data$Sub_metering_3, type="l",
col='blue')
legend("topright", lty=1,
##      legend("topright", pch = "---",
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
source('~/GitHub/datasciencecoursera/datasciencecoursera/ExData_Plotting1/plot3.R')
legend("topright", lty=1, cef=.7,
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
legend("topright", lty=1, cex=.7,
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
plot(data$DateTime, data$Sub_metering_1, type="l",
ylab="Energy sub metering", xlab="")
points(data$DateTime, data$Sub_metering_2, type="l",
col='red')
points(data$DateTime, data$Sub_metering_3, type="l",
col='blue')
legend("topright", lty=1, cex=.9,
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
dev.copy(png, file = "plot3.png", width=480, height=480)
dev.off()
plot(data$DateTime, data$Sub_metering_1, type="l",
ylab="Energy sub metering", xlab="")
points(data$DateTime, data$Sub_metering_2, type="l",
col='red')
points(data$DateTime, data$Sub_metering_3, type="l",
col='blue')
legend("topright", lty=1, cex=.7,
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
dev.copy(png, file = "plot3.png", width=480, height=480)
dev.off()
legend("topright", lty=2,
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
legend("topright", lty=3,
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
plot(data$DateTime, data$Sub_metering_1, type="l",
ylab="Energy sub metering", xlab="")
points(data$DateTime, data$Sub_metering_2, type="l",
col='red')
points(data$DateTime, data$Sub_metering_3, type="l",
col='blue')
legend("topright", lty=3,
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## copy my plot to a PNG file
dev.copy(png, file = "plot3.png", width=480, height=480)
dev.off()
egend("topright",
col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), lty=1)
source('~/.active-rstudio-document')
legend("topright",
col = c("black", "red", "blue"), lty=1,
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=.7)
## copy my plot to a PNG file
legend("topright",
col = c("black", "red", "blue"), lty=1,
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=.8)
plot(data$DateTime, data$Sub_metering_1, type="l",
ylab="Energy sub metering", xlab="")
points(data$DateTime, data$Sub_metering_2, type="l",
col='red')
points(data$DateTime, data$Sub_metering_3, type="l",
col='blue')
legend("topright",
col = c("black", "red", "blue"), lty=1,
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=.8)
## copy my plot to a PNG file
dev.copy(png, file = "plot3.png", width=480, height=480)
dev.off()                         ## close the PNG device!
plot(data$DateTime, data$Sub_metering_1, type="l",
ylab="Energy sub metering", xlab="")
points(data$DateTime, data$Sub_metering_2, type="l",
col='red')
points(data$DateTime, data$Sub_metering_3, type="l",
col='blue')
legend("topright",
col = c("black", "red", "blue"), lty=1,
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=.8)
## copy my plot to a PNG file
dev.copy(png, file = "plot3.png", width=480, height=480, res=72)
dev.off()
plot(data$DateTime, data$Sub_metering_1, type="l",
ylab="Energy sub metering", xlab="")
points(data$DateTime, data$Sub_metering_2, type="l",
col='red')
points(data$DateTime, data$Sub_metering_3, type="l",
col='blue')
legend("topright",
col = c("black", "red", "blue"), lty=1,
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=.8)
## copy my plot to a PNG file
dev.copy(png, file = "plot3.png", height=480, res=72)
dev.off()
png("plot3.png")
plot(data$DateTime, data$Sub_metering_1, type="l",
ylab="Energy sub metering", xlab="")
points(data$DateTime, data$Sub_metering_2, type="l",
col='red')
points(data$DateTime, data$Sub_metering_3, type="l",
col='blue')
legend("topright",
col = c("black", "red", "blue"), lty=1,
legend = c("Sub_metering_1", "Sub_metering_2",
"Sub_metering_3"), cex=.8)
dev.off()                         ## close the PNG device!
head(data)
source('~/GitHub/datasciencecoursera/datasciencecoursera/ExData_Plotting1/plot4.R')
source('~/GitHub/datasciencecoursera/datasciencecoursera/ExData_Plotting1/plot4.R')
